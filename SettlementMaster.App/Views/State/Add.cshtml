@using Generic.Dapper.Model
@model StateObj
<div id="toolbar">
    <div class="col-lg-12">
        <a id="btnCancel" class="btn btn-warning editor_returna" href="@Url.Action("Index","State",new {m = ViewBag.MenuId })"><i class="fa fa-long-arrow-left"></i> Return</a>
    </div>
</div>
@*<div id="right_sidebar">
    @if (Model != null && Model.ITBID != 0)
    {
        <div class="panel panel-warning">
            <div class="panel-body widget">
                <div style="">
                    <i class="fa fa-user"></i>
                    <span class="light-grey">Created By:</span>
                </div>
                <div style="margin-top:10px">
                    <i class="fa fa-calendar"></i>
                    <span class="light-grey">Date Created:</span>
                </div>
                <div style="margin-top:10px" class="div-authname">
                    <i class="fa fa-user"></i>
                    <span class="light-grey">Last Authorized By:</span>
                </div>
                <div style="margin-top:10px" class="div-authdate">
                    <i class="fa fa-user"></i>
                    <span class="light-grey">Last Modified Date:</span>
                </div>
            </div>
        </div>
    }
</div>*@
@*<div id="content_new">*@
    <div class="row" style="margin:10px">
        <div class="col-lg-9">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <i class="fa fa-plus" style="color:#57ACE7;"></i>  @ViewBag.HeaderTitle
                </div>
                <div class="panel-body ">
                    @using (Html.BeginForm("Add", "State", FormMethod.Post, new { id = "formState" }))
                    {
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="m" id="m" value="@ViewBag.MenuId" />
                            <div class="form-horizontal">
                                <div class="form-group">
                                    <label class="col-md-4 control-label">State Code <span class="required"> *</span></label>
                                    <div class="col-md-4">
                                        @Html.HiddenFor(model => model.ITBID)
                                        @if (Model.ITBID == 0)
                                        {
                                            @Html.TextBoxFor(model => model.STATECODE, new { @class = "form-control input-sm", style = "width:150px", maxlength = "3" })
                                        }
                                        else
                                        {
                                            @Html.TextBoxFor(model => model.STATECODE, new { @class = "form-control input-sm", style = "width:150px", maxlength = "3",@readonly="readonly" })
                                        }
                                    </div>
                                </div>
                                
                                <div class="form-group">
                                    <label class="col-md-4 control-label">State Name <span class="required"> *</span></label>
                                    <div class="col-md-4">
                                            @Html.TextBoxFor(model => model.STATENAME, new { @class = "form-control input-sm" })
                                        
                                    </div>

                                </div>
                                
                                <div class="form-group">
                                    <label class="col-md-4 control-label">Country <span class="required"> *</span></label>
                                    <div class="col-md-4">
                                        @Html.DropDownListFor(model => model.COUNTRYCODE, ViewBag.CountryList as SelectList, "Select Country", new { @class = "form-control select2", style = "width:100%" })


                                    </div>
                                </div>
                                <div class="clearfix"></div>

                                @if (ViewBag.StatusVisible == true)
                                {
                                    <div class="form-group">
                                        <label class="col-md-4 control-label">Status</label>
                                        <div class="col-md-2">
                                            
                                            @Html.DropDownListFor(model => model.STATUS, ViewBag.RecordStatus as SelectList, "Select One", new { @class = "form-control select2", style = "width:100%" })


                                        </div>
                                    </div>
                                }
                                <div class="clearfix"></div>
                                
                                <hr />
                                @if (Model.ITBID == 0 && ViewBag.CanAdd == true)
                                {
                                    <div style="text-align:center">
                                        <button type="submit" class="btn btn-primary btn_disable" id="btnSave" value="1"><i class="fa fa-save"></i> @ViewBag.ButtonText</button>

                                    </div>
                                }
@if (Model.ITBID > 0 && ViewBag.CanEdit == true)
{
                                <div style="text-align:center">
                                    <button type="submit" class="btn btn-primary btn_disable" id="btnSave" value="1"><i class="fa fa-save"></i> @ViewBag.ButtonText</button>

                                </div>
}
                            </div>
                            }
                        </div>
            </div>
        </div>

    </div>
@*</div>*@
<div class="clearfix"></div>
                      

@*<script>
    $('.select2').select2({
        theme: "classic"
    });
   // $('a.editor_return').click();
</script>*@
@section Scripts {
@if (ViewBag.Message != null)
{

    var msg = @Html.Raw(Json.Encode(ViewBag.Message));
    <script>
        displayDialogNoty('Notification',@msg) ;
    </script>

}
    @Scripts.Render("~/Scripts/app/state.js")
}
