@using Generic.Dapper.Model
@model UserObj


<div id="toolbar">
    <div class="col-lg-12">
        @*<a id="btnNew" class="btn btn-default editor_create"><i class="fa fa-plus"></i> Add New</a>*@
            <a id="btnCancel" href="@Url.Action("Index","AuthList")" class="btn btn-default editor_return"><i class="fa fa-long-arrow-left"></i> Return to Authorization Queue</a>

    </div>
</div>

@if (Model != null)
{
    var auth = ViewBag.Auth as AuthViewObj;
    if(auth == null)
    {
        auth = new AuthViewObj();
    }
<div id="right_sidebar">
   
        <div class="panel panel-warning">

            <div class="panel-body widget">
                @if (ViewBag.DisplayAuth == true)
                {
                    <div class="divAuth">
                        <div style="text-align:center">
                            @using (Html.BeginForm("Approve", "Account", FormMethod.Post, new { id = "formApprove", style = "display:inline" }))
{
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="AuthId" value="@auth.AuthId" />
                    <input type="hidden" name="PostType" value="@auth.PostType" />
                    <input type="hidden" name="RecordId" value="@auth.RecordId" />
                    <input type="hidden" name="BatchId" value="@auth.BatchId" />
                    <input type="hidden" name="m" value="@auth.MenuId" />
                    <button type="submit" class="btn btn-success btn_disable editor_approve" id="btnApprove"><i class="fa fa-check"></i> Approve</button>
}
                    <button type="submit" class="btn btn-danger btn_disable editor_reject" id="btnReject"><i class="fa fa-times"></i> Reject</button>

                        </div>
                        <hr />
                    </div>
                }
                <div style="">
                    <i class="fa fa-chevron-right"></i>
                    <span class="light-grey">Status: <span class="label label-default status">@auth.Status</span></span>
                </div>
                        <div style="margin-top:10px">
                        <i class="fa fa-user"></i>
                        <span class="light-grey">Created By:<span class="label label-default"> @auth.User</span></span>
                    </div>
                <div style="margin-top:10px">
                    <i class="fa fa-calendar"></i>
                    <span class="light-grey">Date Created:<span class="label label-default"> @auth.DateCreated </span></span>
                </div>
                <div style="margin-top:10px" class="div-authname">
                    <i class="fa fa-map-marker"></i>
                    <span class="light-grey">Event Type:<span class="label label-default"> @auth.EventType</span></span>
                </div>
                @*<div style="margin-top:10px" class="div-authdate">
                    <i class="fa fa-user"></i>
                    <span class="light-grey">Last Modified Date:</span>
                </div>*@
            </div>
        </div>
    
</div>
<div id="content_new">
    <div class="row2">

        <div class="col-lg-12">
            <div class="alert alert-dismissible fade in noty" role="alert" style="display:none">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">

                    <span aria-hidden="true">×</span>

                </button>
                <span class="notyMsg">

                </span>
            </div>

        </div>

        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <i class="fa fa-edit" style="color:#57ACE7;"></i>  
                    @ViewBag.HeaderTitle


                </div>
                <div class="panel-body ">
                                    @using (Html.BeginForm("", "", FormMethod.Post, new { id = "formUsers" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        <div class="form-horizontal">
                                            <div class="alert alert-dismissible fade in notyModal" role="alert" style="display:none">
                                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">

                                                    <span aria-hidden="true">×</span>

                                                </button>
                                                <span class="notyModalMsg">

                                                </span>
                                            </div>
                                            <div class="form-group">
                                                <label class="col-md-2 control-label">Institution<span class="required"> *</span></label>
                                                <div class="col-md-4">
                                                    <div class="form-groupp input-groupa">
                                                        @*<select class="form-control select2" name="InstitutionId" id="InstitutionId" style="width:100%"></select>*@
                                                        @Html.DropDownListFor(model => model.InstitutionId, ViewBag.Institution as SelectList, "Select Institution", new { @class = "form-control select2", style = "width:100%" })


                                                    </div>
                                                </div>
                                                <label class="col-md-2 control-label">Login ID<span class="required"> *</span></label>
                                                <div class="col-md-4">
                                                    <div class="form-groupp input-groupa">
                                                        @*<input type="text" id="UserName" name="UserName" placeholder="Login ID" class="form-control" />*@
                                                        @Html.TextBoxFor(model=> model.UserName, new { placeholder = "Login ID", @class="form-control" })
                                                        @*<span class="input-group-btn">
                                            <button id="btnSearch" class="btn btn-default" type="button">
                                                <i class="fa fa-search"></i>
                                            </button>
                                        </span>*@
                                                    </div>
                                                </div>
                                                <div class="clearfix"> </div>
                                            </div>

                                            <div class="form-group">
                                                <label class="col-md-2 control-label ">Last Name<span class="required"> *</span></label>
                                                <div class="col-md-4">
                                                    <div class="input-group">
                                                        <span class="input-group-addon"><span class="fa fa-user"></span></span>
                                                        @Html.TextBoxFor(model => model.LastName, new { placeholder = "Login ID", @class = "form-control" })
                                                        <input id="ItbId" name="ItbId" class="form-control" type="hidden" />
                                                        <input id="RoleName" name="RoleName" class="form-control" type="hidden" />
                                                        <input id="DeptName" name="DeptName" class="form-control" type="hidden" />
                                                        <input type="hidden" name="m" value="@ViewBag.MenuId" />
                                                    </div>
                                                </div>
                                                <label class="col-md-2 control-label ">First Name<span class="required"> *</span></label>
                                                <div class="col-md-4">
                                                    <div class="input-group">
                                                        <span class="input-group-addon"><span class="fa fa-user"></span></span>
                                                        @Html.TextBoxFor(model => model.FirstName, new { placeholder = "First Name", @class = "form-control" })
                                                    </div>
                                                </div>
                                                <div class="clearfix"> </div>
                                            </div>

                                            <div class="form-group">
                                                <label class="col-md-2 control-label">Mobile-No</label>
                                                <div class="col-md-4">
                                                    <div class="input-group">
                                                        <span class="input-group-addon"><span class="fa fa-phone"></span></span>
                                                        @Html.TextBoxFor(model => model.MobileNo, new { placeholder = "Mobile No.", @class = "form-control" })                                                    </div>
                                                    <div class="clearfix"> </div>

                                                </div>
                                                <label class="col-md-2 control-label">
                                                    E-Mail
                                                    <span class="required"> *</span>
                                                </label>
                                                <div class="col-md-4">
                                                    <div class="input-group">
                                                        <span class="input-group-addon"><span class="fa fa-envelope"></span></span>
                                                        @*<input type="email" id="Email" name="Email" placeholder="Email" class="form-control" />*@
                                                        @Html.TextBoxFor(model => model.Email, new { placeholder = "Email", @class = "form-control",type="email" })
                                                    </div>
                                                </div>
                                                <div class="clearfix"> </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="col-md-2 control-label">
                                                    Department
                                                    <span class="required"> *</span>
                                                </label>
                                                <div class="col-md-4">

                                                    @*<select class="form-control select2" name="DeptCode" id="DeptCode" style="width:100%"></select>*@
                                                    @Html.DropDownList("DeptCode", ViewBag.Department as SelectList, "Select Department", new { @class = "form-control select2", style = "width:100%" })


                                                </div>
                                                <label class="col-md-2 control-label">
                                                    Role
                                                    <span class="required"> *</span>
                                                </label>
                                                <div class="col-md-4">

                                                    @*<select class="form-control select2" name="RoleId" id="RoleId" style="width:100%"></select>*@
                                                    @Html.DropDownList("RoleId", ViewBag.Role as SelectList, "Select Role", new { @class = "form-control select2", style = "width:100%" })


                                                </div>
                                            </div>
<div class="form-group">
        <label class="col-md-2 control-label">Supervisor</label>
        <div class="col-md-4">
            <div class="">
                @Html.CheckBoxFor(m=> m.Supervisor)
            </div>
        </div>
</div>
    @*<div class="form-group">
        <label class="col-md-2 control-label">Enforce Password Change</label>
        <div class="col-md-4">
            <div class="">

                <input type="checkbox" name="EnforcePassword" id="EnforcePassword" value="" />
            </div>

        </div>

        <label class="col-md-2 control-label">Password Change Days</label>
        <div class="col-md-4">
            <div class="input-group">
                <span class="input-group-addon"><span class="fa fa-money"></span></span>
                @Html.TextBoxFor(model => model.EnforcePasswordChangeDays, new { placeholder = "Login ID", @class = "form-control", style = "width:100px" })
            </div>

        </div>
    </div>*@
                                            @if (ViewBag.StatusVisible == true)
                                            {
                                                <div class="form-group">
                                                    <label class="col-md-2 control-label" id="lblstat">Status</label>
                                                    <div class="col-md-4">

                                                        <select class="form-control select2" name="Status" id="Status">
                                                            <option value="ACTIVE">Active</option>
                                                            <option value="LOCK">Lock</option>
                                                            <option value="DELETE">Delete</option>
                                                        </select>

                                                    </div>


                                                </div>
                                            }
                                            <div class="clearfix"> </div>

                                           

                                        </div>

                                    }
                           
                </div>
            </div>

        </div>

    </div>
</div>
<div class="modal fade" id="myModalReject" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="width:450px">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalRejectLabel"><i class="fa fa-plus"></i> Rejection Reason</h4>
            </div>

@using (Html.BeginForm("Reject", "Account", FormMethod.Post, new { id = "formReject", style = "display:inline" }))
{
    @Html.AntiForgeryToken()
    <input type="hidden" name="AuthId" value="@auth.AuthId" />
                    <input type="hidden" name="PostType" value="@auth.PostType" />
                    <input type="hidden" name="RecordId" value="@auth.RecordId" />
                    <input type="hidden" name="BatchId" value="@auth.BatchId" />
                    <input type="hidden" name="m" value="@auth.MenuId" />
                    <div class="modal-body">

                            <div class="form-horizontala">
                                <div class="form-group">
                                    <label class="control-label">Rejection Reason<span style="color:red">*</span></label>
                                    <div class="">
                                        <textarea name="Narration" id="Narration" class="form-control">
                                        </textarea>
                                        <label class="error error_reject" style="display:none">Please enter rejection reason.</label>

                                    </div>
                                </div>
                            </div>
                      
                        <div class="clearfix"></div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-danger editor_reject_final btn_disable" ><i class="fa fa-times"></i> Reject</button>
                    </div>
}
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
}


<div class="clearfix"></div>


    @section Scripts {
    @if (ViewBag.Message != null)
    {
            <script>
           
               // alert('lol');
                    displayDialogNoty('Notification', '@ViewBag.Message');
         
            </script>
    }
                                        <script>
                                            $(document).on('click', '.editor_approve', function (e) {
                                                e.preventDefault();
                                            var $reqLogin = {
                                                url: '@Url.Action("Approve","Account")',

                                                data: $('#formApprove').serialize(),
                                                type: 'POST',
                                                contentType: "application/x-www-form-urlencoded"
                                            };
                                            //console.log($reqLogin.url);
                                            //console.log($('#formApprove').serialize());
                                            //return;
                                            loaderSpin2(true);
                                            //disableButton(true);
                                            var ajax = new Ajax();
                                            ajax.send($reqLogin).done(function (response) {
                                                loaderSpin2(false);
                                                //disableButton(false);
                                                if (response.RespCode === 0) {
                                                    $('.status').html(response.status);
                                                    $('.divAuth').hide();
                                                    displayDialogNoty('Notification', response.RespMessage);
                                                }
                                                else {
                                                    displayDialogNoty('Notification', response.RespMessage);
                                                }
                                            }).fail(function (xhr, status, err) {
                                                loaderSpin2(false);
                                                //disableButton(false);
                                                displayDialogNoty('Notification', 'No network connectivity. Please check your network connections.', true);
                                            });
                                        })


                                        $(document).on('click', '.editor_reject', function (e) {
                                            e.preventDefault();
                                           
                                            $('#myModalReject').modal({ backdrop: 'static', keyboard: false });
                                        })
                                        $(document).on('click', '.editor_reject_final', function (e) {
                                            e.preventDefault();
                                            if ($.trim($('#Narration').val()) == '') {
                                                $('.error_reject').show();
                                                return;
                                            }
                                            $('.error_reject').hide();
                                            var $reqLogin = {
                                                url: '@Url.Action("Reject","Account")',

                                                data: $('#formReject').serialize(),
                                                type: 'POST',
                                                contentType: "application/x-www-form-urlencoded"
                                            };
                                            //console.log($reqLogin.url);
                                            //console.log($('#formReject').serialize());
                                            //return;
                                            loaderSpin(true);
                                            disableButton(true);
                                            var ajax = new Ajax();
                                            ajax.send($reqLogin).done(function (response) {
                                                loaderSpin(false);
                                                disableButton(false);
                                                if (response.RespCode === 0) {
                                                    $('.status').html(response.status);
                                                    $('.divAuth').hide();
                                                    $('#myModalReject').modal('hide');
                                                    displayDialogNoty('Notification', response.RespMessage);
                                                }
                                                else {
                                                    displayDialogNoty('Notification', response.RespMessage);
                                                }
                                            }).fail(function (xhr, status, err) {
                                                loaderSpin(false);
                                                disableButton(false);
                                                displayDialogNoty('Notification', 'No network connectivity. Please check your network connections.', true);
                                            });

                                        })
                                    </script>

     }   

