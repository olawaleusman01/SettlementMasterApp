@using Generic.Dapper.Model
@model SERVICEChannelObj
<div id="toolbar">
    <div class="col-lg-12">
        <a id="btnCancel" class="btn btn-warning editor_returna" href="@Url.Action("Index","ServiceChannel",new {m = ViewBag.MenuId })"><i class="fa fa-long-arrow-left"></i> Return</a>
    </div>
</div>
 
<div class="row" style="margin:10px">



    <div class="col-lg-9">
        <div class="panel panel-default">
            <div class="panel-heading">
                <i class="fa fa-plus" style="color:#57ACE7;"></i>  @ViewBag.HeaderTitle
                @*<a id="btnNew" class="btn btn-default editor_create"><i class="fa fa-plus"></i> Add New</a>*@

            </div>
            <div class="panel-body ">
                @using (Html.BeginForm("Add", "ServiceChannel", FormMethod.Post, new { id = "formServiceChannel" }))
                {
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="m" id="m" value="@ViewBag.MenuId" />
                        <div class="form-horizontal">

                            <div class="form-group">
                                <label class="col-md-3 control-label">Service Code <span class="required"> *</span></label>
                                <div class="col-md-4">
                                    @Html.HiddenFor(model => model.ITBID)
                                    @if (Model.ITBID == 0)
                                    {
                                        @Html.TextBoxFor(model => model.CODE, new { @class = "form-control input-sm", style = "width:150px" })
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(model => model.CODE, new { @class = "form-control input-sm", @readonly = "readonly", style = "width:150px" })
                                    }
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="form-group">

                                <label class="col-md-3 control-label">Service Name <span class="required"> *</span></label>
                                <div class="col-md-4">
                                    @Html.TextBoxFor(model => model.DESCRIPTION, new { @class = "form-control input-sm" })
                                </div>

                            </div>
                            <div class="clearfix"></div>
                            <div class="form-group">
                                <label class="col-md-3 control-label">Channel <span class="required"> *</span></label>
                                <div class="col-md-4">
                                    @Html.DropDownListFor(model => model.ChannelID, ViewBag.Channel as SelectList, "Select One", new { @class = "form-control select2", style = "width:100%" })

                                </div>

                            </div>
                            <div class="clearfix"></div>
                            <div class="form-group">
                                <label class="col-md-3 control-label">Bank <span class="required"> *</span></label>
                                <div class="col-md-4">
                                     @Html.DropDownListFor(model => model.BankCode, ViewBag.Bank as SelectList, "--Select One--", new { @class = "form-control select2", style = "width:100%" })


                                </div>

                            </div>
                            <div class="clearfix"></div>
                            <div class="form-group">

                                <label class="col-md-3 control-label">DR Bank Account<span class="required"> *</span></label>
                                <div class="col-md-4">
                                    @Html.TextBoxFor(model => model.BankAccount, new { @class = "form-control input-sm" })
                                </div>

                            </div>
                            <div class="clearfix"></div>

                            @if (ViewBag.StatusVisible == true)
                            {
                                <div class="form-group">
                                    <label class="col-md-3 control-label">Status</label>
                                    <div class="col-md-2">

                                        @Html.DropDownListFor(model => model.STATUS, ViewBag.RecordStatus as SelectList, "Select One", new { @class = "form-control select2", style = "width:100%" })


                                    </div>
                                </div>
                            }
                            <div class="clearfix"></div>

                            <hr />
                            @if (Model.ITBID == 0 && ViewBag.CanAdd == true)
                            {
                                <div style="text-align:center">
                                    <button type="submit" class="btn btn-primary btn_disable" id="btnSave" value="1"><i class="fa fa-save"></i> @ViewBag.ButtonText</button>

                                </div>
                            }
                            @if (Model.ITBID > 0 && ViewBag.CanEdit == true)
                            {
                                <div style="text-align:center">
                                    <button type="submit" class="btn btn-primary btn_disable" id="btnSave" value="1"><i class="fa fa-save"></i> @ViewBag.ButtonText</button>

                                </div>
                            }
                        </div>
                }
            </div>
        </div>
    </div>

</div>
@*</div>*@
<div class="clearfix"></div>


@*<script>
        $('.select2').select2({
            theme: "classic"
        });
       // $('a.editor_return').click();
    </script>*@
@section Scripts {
    @if (ViewBag.Message != null)
    {

        var msg = @Html.Raw(Json.Encode(ViewBag.Message));
        <script>
        displayDialogNoty('Notification',@msg) ;
        </script>

    }
    @Scripts.Render("~/Scripts/app/servicechannel.js")
}
